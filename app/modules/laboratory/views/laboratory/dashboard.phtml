<?php include("auto_side.phtml"); ?>
	<script src='<?php echo $config->application->baseUrl; ?>/public/js/moment.min.js'></script>
	<script src='<?php echo $config->application->baseUrl; ?>/public/js/jquery.min.js'></script>
	<script src='<?php echo $config->application->baseUrl; ?>/public/js/jquery-ui.min.js' type="text/javascript"></script>
	<script src='<?php echo $config->application->baseUrl; ?>/public/js/fullcalendar.min.js'></script>
<script type="text/javascript">

	$(document).ready(function() {

		var zone = "05:30"; 

	    $.ajax({
		url: '<?php echo $config->application->baseUrl; ?>/modules/Admin/getDuties',
        type: 'POST', 
        data: 'type=fetch',
        async: false,
        success: function(s){
        	json_events = s;
        }
	});


	var currentMousePos = {
	    x: -1,
	    y: -1
	};
		jQuery(document).on("mousemove", function (event) {
        currentMousePos.x = event.pageX;
        currentMousePos.y = event.pageY;
    });

		$('#external-events .fc-event').each(function() {

			$(this).data('event', {
				title: $.trim($(this).text()), 
				stick: true
			});

			$(this).draggable({
				zIndex: 999,
				revert: true,
				revertDuration: 0 
			});

		});

		/* initialize the calendar
		-----------------------------------------------------------------*/

		$('#calendar').fullCalendar({
			events: JSON.parse(json_events),
			utc: true,
			header: {
				left: 'prev,next today',
				center: 'title',
				right: 'month,agendaWeek,agendaDay'
			},
			editable: false,
			droppable: false, 
			slotDuration: '00:30:00',
			eventReceive: function(event){
				var title = event.title;
				var start = event.start.format("YYYY-MM-DD[T]HH:mm:SS");
				$.ajax({
					url: '<?php echo $config->application->baseUrl; ?>/modules/Admin/getDuties',
		    		data: 'type=new&title='+title+'&startdate='+start+'&zone='+zone,
		    		type: 'POST',
		    		dataType: 'json',
		    		success: function(response){
		    			event.id = response.eventid;
		    			$('#calendar').fullCalendar('updateEvent',event);
		    		},
		    		error: function(e){
		    			console.log(e.responseText);

		    		}
		    	});
				$('#calendar').fullCalendar('updateEvent',event);
				console.log(event);
			},
			eventDrop: function(event, delta, revertFunc) {
		        var title = event.title;
		        var start = event.start.format();
		        var end = (event.end == null) ? start : event.end.format();
		        $.ajax({
					url: '<?php echo $config->application->baseUrl; ?>/modules/Admin/getDuties',
					data: 'type=resetdate&title='+title+'&start='+start+'&end='+end+'&eventid='+event.id,
					type: 'POST',
					dataType: 'json',
					success: function(response){
						if(response.status != 'success')		    				
						revertFunc();
					},
					error: function(e){		    			
						revertFunc();
						alert('Error processing your request: '+e.responseText);
					}
				});
		    },
			eventDragStop: function (event, jsEvent, ui, view) {
			    if (isElemOverDiv()) {
			    	var con = confirm('Are you sure to delete this event permanently?');
			    	if(con == true) {
						$.ajax({
							url: '<?php echo $config->application->baseUrl; ?>/modules/Admin/getDuties',
				    		data: 'type=remove&eventid='+event.id,
				    		type: 'POST',
				    		dataType: 'json',
				    		success: function(response){
				    			console.log(response);
				    			if(response.status == 'success'){
				    				$('#calendar').fullCalendar('removeEvents');
            						getFreshEvents();
            					}
				    		},
				    		error: function(e){	
				    			alert('Error processing your request: '+e.responseText);
				    		}
			    		});
					}   
				}
			}
		});

	function getFreshEvents(){
		$.ajax({
			url: '<?php echo $config->application->baseUrl; ?>/modules/Admin/getDuties',
	        type: 'POST', 
	        data: 'type=fetch',
	        async: false,
	        success: function(s){
	        	freshevents = s;
	        }
		});
		$('#calendar').fullCalendar('addEventSource', JSON.parse(freshevents));
	}


	function isElemOverDiv() {
        var trashEl = jQuery('#trash');

        var ofs = trashEl.offset();

        var x1 = ofs.left;
        var x2 = ofs.left + trashEl.outerWidth(true);
        var y1 = ofs.top;
        var y2 = ofs.top + trashEl.outerHeight(true);

        if (currentMousePos.x >= x1 && currentMousePos.x <= x2 &&
            currentMousePos.y >= y1 && currentMousePos.y <= y2) {
            return true;
        }
        return false;
    }

	});

</script>
<style>

	body {
		margin-top: 0px;
		text-align: center;
		font-size: 14px;
		font-family: "Roboto",Helvetica,Arial,Verdana,sans-serif;
	}

	#trash{
/*		width:68px;
		height:68px;
		float:left;
		padding-bottom: 15px;
		position: relative;
        color:#e25050;*/
	}
		
	#wrap {
		width: 800px;
		margin: 0 auto;
	}
		
	#external-events {
		float: left;
		width: 100%;
		padding: 0 10px;
		border: 1px solid #ccc;
		background: #eee;
		text-align: left;
	}
		
	#external-events h4 {
		font-size: 16px;
		margin-top: 0;
		padding-top: 1em;
	}
		
	#external-events .fc-event {
		margin: 10px 0;
		cursor: pointer;
	}
		
	#external-events p {
		margin: 1.5em 0;
		font-size: 11px;
		color: #666;
	}
		
	#external-events p input {
		margin: 0;
		vertical-align: middle;
	}

	#calendar {
		float: right;
		width: 900px;
	}

</style>
</head>
</nav>
<body>
			<div class="content">
				<div class="container-fluid">
					<div class="row">
						<div class="col-lg-12 col-md-12">
							<div class="card card-nav-tabs">
								<div class="card-header" data-background-color="purple">
									<div class="nav-tabs-navigation">
										<div class="nav-tabs-wrapper" style="padding:0em;margin:0em;">
											<p align="center" style="font-size:20px;">
                                                <i class="fa fa-calendar"></i>
                                                  Duty Roaster
                                            </p>
										</div>
									</div>
								</div>
<br/>	<div id='wrap'>


		<div style="margin-top:1em;" id='calendar'></div>

		<div style='clear:both'></div>

		<xspan class="tt">x</xspan>

	</div>
							</div>
						</div>

					</div>
				</div>
			</div>
</body>
</html>
